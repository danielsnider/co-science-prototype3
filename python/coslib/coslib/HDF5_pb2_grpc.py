# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import HDF5_pb2 as HDF5__pb2


class AssetStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAsset = channel.unary_unary(
        '/asset.Asset/GetAsset',
        request_serializer=HDF5__pb2.AssetRequest.SerializeToString,
        response_deserializer=HDF5__pb2.AssetReply.FromString,
        )


class AssetServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAsset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AssetServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAsset': grpc.unary_unary_rpc_method_handler(
          servicer.GetAsset,
          request_deserializer=HDF5__pb2.AssetRequest.FromString,
          response_serializer=HDF5__pb2.AssetReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'asset.Asset', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
